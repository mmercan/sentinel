FROM mmercan/sentinel-sonarqube-dotnet22-sdk AS test
ARG buildtime_APPID
ARG buildtime_APPSECRET
ARG buildtime_ADID
# ENV DOTNET_USE_POLLING_FILE_WATCHER=1
# ENV ASPNETCORE_ENVIRONMENT=Development
# ENV SONAR_HOST http://sonar.myrcan.com
# RUN apt-get update && apt-get install -y openjdk-8-jdk
# RUN dotnet tool install --global dotnet-sonarscanner
# ENV PATH="${PATH}:/root/.dotnet/tools"
ENV PROJECT=Sentinel.Api.Billing
ENV VERSION=1.0
ENV SONARKEY=fbf6f7c2fed68cbdc15fa82e269f973930831e3b
ENV APPID=$buildtime_APPID
ENV APPSECRET=$buildtime_APPSECRET
ENV ADID=$buildtime_ADID
ENV SentinelConnection="Server=52.247.221.7;Database=sentinel;User Id=sa;Password=MySentP@ssw0rd;"


WORKDIR /src
COPY Sentinel.Api.Billing/Sentinel.Api.Billing.csproj Sentinel.Api.Billing/
RUN dotnet restore Sentinel.Api.Billing/Sentinel.Api.Billing.csproj
COPY . .
RUN dotnet sonarscanner begin /k:$PROJECT /v:$VERSION /d:sonar.host.url=$SONAR_HOST /d:sonar.login=$SONARKEY  /d:sonar.cs.opencover.reportsPaths="/TestResults/coverage.opencover.xml" /d:sonar.exclusions="**bootstrap.css, **bootstrap-reboot.css, **bootstrap.js" /d:sonar.coverage.exclusions="**Tests*.cs"
RUN dotnet build ./Sentinel.Api.Billing/Sentinel.Api.Billing.sln
RUN dotnet test ./Sentinel.Api.Billing/Sentinel.Api.Billing.sln /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=/TestResults/
RUN dotnet build-server shutdown
RUN dotnet sonarscanner end /d:sonar.login=$SONARKEY