FROM mmercan/sentinel-sonarqube-dotnet22-sdk AS test
ARG buildtime_APPID
ARG buildtime_APPSECRET
ARG buildtime_ADID
ARG buildtime_SONARKEY
# ENV DOTNET_USE_POLLING_FILE_WATCHER=1
# ENV ASPNETCORE_ENVIRONMENT=Development
# ENV SONAR_HOST http://sonar.myrcan.com
# RUN apt-get update && apt-get install -y openjdk-8-jdk
# ENV PROJECT sentinel-comms
# RUN dotnet tool install --global dotnet-sonarscanner
# ENV PATH="${PATH}:/root/.dotnet/tools"
ENV PROJECT=Sentinel.HealthChecks
ENV VERSION=1.0
ENV SONARKEY=$buildtime_SONARKEY
ENV APPID=$buildtime_APPID
ENV APPSECRET=$buildtime_APPSECRET
ENV ADID=$buildtime_ADID
ENV SentinelConnection="Server=52.247.221.7;Database=sentinel;User Id=sa;Password=MySentP@ssw0rd;"


WORKDIR /src
# COPY Sentinel.Api.Comms/Sentinel.Api.Comms.csproj Sentinel.Api.Comms/
# RUN dotnet restore Sentinel.Api.Comms/Sentinel.Api.Comms.csproj
COPY . .
RUN dotnet sonarscanner begin /k:$PROJECT /v:$VERSION /d:sonar.host.url=$SONAR_HOST /d:sonar.login=$SONARKEY  /d:sonar.cs.opencover.reportsPaths="/TestResults/" /d:sonar.exclusions="**bootstrap.css, **bootstrap-reboot.css, **bootstrap.js, **/wwwroot/**" /d:sonar.coverage.exclusions="**Tests*.cs"
RUN dotnet build ./HealthChecks/HealthChecks.sln

RUN dotnet test ./HealthChecks/HealthChecks.sln  /p:CollectCoverage=true  /p:CoverletOutput=/TestResults/ /p:MergeWith=/TestResults/coverage.json
RUN dotnet test ./Sentinel.Empty.Tests/Sentinel.Empty.Tests.sln /p:CollectCoverage=true /p:MergeWith="/TestResults/coverage.json" /p:CoverletOutputFormat="opencover" /p:CoverletOutput=/TestResults/

RUN dotnet build-server shutdown
RUN dotnet sonarscanner end /d:sonar.login=$SONARKEY