FROM mcr.microsoft.com/dotnet/core/sdk:3.0
ENV DOTNET_USE_POLLING_FILE_WATCHER=1
ENV ASPNETCORE_ENVIRONMENT=Development
ENV SONAR_HOST http://sonar.myrcan.com

RUN apt update && apt upgrade -y && apt-get install -y  software-properties-common &&  apt-get install -y --no-install-recommends apt-utils
RUN apt-cache search openjdk
RUN apt install -y openjdk-11-jdk

ENV PROJECT sentinel-comms
RUN dotnet tool install --global dotnet-sonarscanner
ENV PATH="${PATH}:/root/.dotnet/tools"
RUN apt-get update && \
    apt-get install -y curl  && \
    curl -sL https://deb.nodesource.com/setup_10.x | bash && \
    apt-get install -y nodejs && \
    node -v && npm -v

RUN curl -SL --output dotnet.tar.gz https://dotnetcli.blob.core.windows.net/dotnet/Sdk/2.2.402/dotnet-sdk-2.2.402-linux-x64.tar.gz \
    && dotnet_sha512='81937de0874ee837e3b42e36d1cf9e04bd9deff6ba60d0162ae7ca9336a78f733e624136d27f559728df3f681a72a669869bf91d02db47c5331398c0cfda9b44' \
    && echo "$dotnet_sha512 dotnet.tar.gz" | sha512sum -c - \
    && tar -zxf dotnet.tar.gz -C /usr/share/dotnet \
    && rm dotnet.tar.gz

RUN dotnet tool install --global dotnet-reportgenerator-globaltool

RUN  dotnet --list-sdks 
RUN dotnet --version 


#######
# RUN add-apt-repository -y ppa:linuxuprising/java
# RUN apt-get update
# RUN apt-get -y install oracle-java8-installer
# RUN apt install oracle-java10-set-default

# RUN apt-get update && \
#     apt-get upgrade -y && \
#     apt-get install -y  software-properties-common && \
#     add-apt-repository ppa:webupd8team/java -y && \
#     apt-get update && \
#     echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections && \
#     apt-get install -y oracle-java8-installer && \
#     apt-get clean


# RUN apk update
# RUN apt-get update
# RUN apt install openjdk-8-jdk
# RUN apt-get install -y openjdk:9-jre





# # Pull base image.
# FROM microsoft/dotnet:2.2-sdk
# ENV SONAR_SCANNER_VERSION 2.8
# ENV SONAR_SCANNER_HOME /home/sonar-scanner-${SONAR_SCANNER_VERSION}
# ENV SONAR_SCANNER_PACKAGE sonar-scanner-${SONAR_SCANNER_VERSION}.zip
# ENV SONAR_RUNNER_HOME ${SONAR_SCANNER_HOME}
# ENV PATH $PATH:${SONAR_SCANNER_HOME}/bin
# ENV WORKDIR /home/workspace
# ENV SONAR_HOST http://sonar.myrcan.com
# ENV SONAR_USER admin
# ENV SONAR_PASS Pa$$w0rd
# ENV PROJECT sentinel-comms

# RUN dotnet tool install --global dotnet-sonarscanner
# ENV PATH="${PATH}:/root/.dotnet/tools"

# RUN dotnet sonarscanner begin /k:$PROJECT /d:sonar.host.url=$SONAR_HOST /d:sonar.login="291e97953a3742b000a056732d73dce5ef439985"
# #   dotnet sonarscanner begin /k:$PROJECT /v:$VERSION /d:sonar.host.url=$SONAR_HOST
# RUN dotnet sonarscanner end /d:sonar.login="291e97953a3742b000a056732d73dce5ef439985"

# # Define working directory.
# WORKDIR ${WORKDIR}

# # RUN apt-get update && apt-get install -y --no-install-recommends apt-utils

# # Install Node and NPM 
# RUN apt-get update && \
#     apt-get install -y curl  && \
#     apt-get install -y nodejs && \
#     curl -sL https://deb.nodesource.com/setup_6.x | bash && \
#     apt-get install nodejs && \
#     node -v npm && npm -v


# #curl -sL https://deb.nodesource.com/setup_6.x | bash - && \
# #apt-get install -y nodejs && \
# #apt-get install -y npm && \

# # Install OpenJDK 8
# # RUN echo 'deb http://deb.debian.org/debian jessie-backports main' > /etc/apt/sources.list.d/jessie-backports.list && \
# #     apt-get update && \
# #     apt-get install -y -t jessie-backports openjdk-8-jre-headless ca-certificates-java

# # Install dependencies
# # RUN apt-get -yqq update && \
# #     apt-get -yqq --no-install-recommends install git bzip2 curl unzip && \
# #     npm install -g gulp bower && \
# #     npm cache clean && \
# #     apt-get -yqq autoremove && \
# #     apt-get -yqq clean && \
# #     rm -rf /var/lib/apt/lists/* /var/cache/* /tmp/* /var/tmp/*

# # # Allow root for bower
# # RUN echo '{ "allow_root": true }' > /root/.bowerrc

# # # Download sonar
# # RUN curl --insecure -OL https://sonarsource.bintray.com/Distribution/sonar-scanner-cli/${SONAR_SCANNER_PACKAGE} && \
# #     unzip ${SONAR_SCANNER_PACKAGE} -d /home && \
# #     rm ${SONAR_SCANNER_PACKAGE}

# # RUN addgroup sonar && \
# #     useradd -s /usr/sbin/nologin -d ${SONAR_SCANNER_HOME} -g sonar sonar && \
# #     chown -R sonar:sonar ${SONAR_SCANNER_HOME} && \
# #     chown -R sonar:sonar ${WORKDIR}

# # USER sonar
