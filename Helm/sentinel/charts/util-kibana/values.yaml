# Default values for Sentinel.Util.Kibana.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
branch: unknown
image:
  repository: docker.elastic.co/kibana/kibana
  tag: "6.8.0"
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


istio:
  enabled: true


resources:
  limits:
    cpu: 1000m
  requests:
    cpu: 100m
nodeSelector: {}

tolerations: []

affinity: {}
environment: dev
hostdomain: myrcan.com
env:
  values:
    - name: DOTNET_RUNNING_IN_CONTAINER
      value: "true"

secrets:
  SentinelConnection: "Server=sentinel-mssql-db-helm-insecret;Database=sentinel;User Id=sa;Password=MySentP@ssw0rd;"

configmap:
    ASPNETCORE_ENVIRONMENT: "Production"

extSecrets:
    RedisConnection:
      secretname: "sentinel-db-redis"
      secretkey: "RedisConnection"

azurepipelines:
  run: "run"
  pipeline: "pipeline"
  pipelineId: "pipelineId"
  jobName: "jobName"
  runuri: "runuri"
  project: "project"
  org: "org"
