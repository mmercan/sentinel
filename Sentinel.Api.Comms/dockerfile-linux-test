FROM mmercan/sentinel-sonarqube-dotnet30-sdk AS test
ARG buildtime_APPID
ARG buildtime_APPSECRET
ARG buildtime_ADID
ARG buildtime_SONARKEY
# ENV DOTNET_USE_POLLING_FILE_WATCHER=1
# ENV ASPNETCORE_ENVIRONMENT=Development
# ENV SONAR_HOST http://sonar.myrcan.com
# RUN apt-get update && apt-get install -y openjdk-8-jdk
# ENV PROJECT sentinel-comms
# RUN dotnet tool install --global dotnet-sonarscanner
# ENV PATH="${PATH}:/root/.dotnet/tools"
ENV ASPNETCORE_URLS=http://+:80
ENV PROJECT=Sentinel.Api.Comms
ENV VERSION=1.0
ENV SONARKEY=$buildtime_SONARKEY
ENV APPID=$buildtime_APPID
ENV APPSECRET=$buildtime_APPSECRET
ENV ADID=$buildtime_ADID
ENV SentinelConnection="Server=52.247.221.7;Database=sentinel;User Id=sa;Password=MySentP@ssw0rd;"
ENV SONAR_HOST=https://sonarcloud.io

WORKDIR /src
COPY Sentinel.Api.Comms/Sentinel.Api.Comms.csproj Sentinel.Api.Comms/
RUN dotnet restore Sentinel.Api.Comms/Sentinel.Api.Comms.csproj
COPY . .
RUN dotnet sonarscanner begin /k:$PROJECT /v:$VERSION /d:sonar.host.url=$SONAR_HOST /o:mmercan-github /d:sonar.login=$SONARKEY  /d:sonar.cs.opencover.reportsPaths="/TestResults/coverage.opencover.xml" /d:sonar.exclusions="**bootstrap.css, **bootstrap-reboot.css, **bootstrap.js, **/wwwroot/**, **Sentinel.Empty.Tests" /d:sonar.coverage.exclusions="**Tests*.cs, **.js," /d:sonar.cs.vstest.reportsPaths="/TestResults/*.trx"
RUN dotnet build ./Sentinel.Api.Comms/Sentinel.Api.Comms.sln

RUN dotnet test ./Sentinel.Api.Comms/Sentinel.Api.Comms.sln   /p:CollectCoverage=true /p:CoverletOutput=/TestResults/ /p:MergeWith=/TestResults/coverage.json --logger=trx -r /TestResults/
RUN dotnet test ./Sentinel.Empty.Tests/Sentinel.Empty.Tests.sln /p:CollectCoverage=true /p:MergeWith="/TestResults/coverage.json" /p:CoverletOutputFormat="opencover" /p:CoverletOutput=/TestResults/

# RUN dotnet test ./HealthChecks/Mercan.HealthChecks.Common.Tests/Mercan.HealthChecks.Common.Tests.csproj  /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=/TestResults/Mercan.HealthChecks.Common.Tests.xml
# RUN dotnet test ./Sentinel.Api.Comms.Tests/Sentinel.Api.Comms.Tests.csproj /p:CollectCoverage=true  /p:CoverletOutputFormat=opencover /p:CoverletOutput=/TestResults/Sentinel.Api.Comms.Tests.xml 
RUN dotnet build-server shutdown
RUN dotnet sonarscanner end /d:sonar.login=$SONARKEY

ENTRYPOINT dotnet test ./Sentinel.Api.Comms/Sentinel.Api.Comms.sln  /p:CollectCoverage=true /p:Exclude="[xunit.*.*]*" /p:CoverletOutput=/TestResults/ /p:MergeWith=/TestResults/coverage.json --logger=trx -r /TestResults/ && dotnet test ./Sentinel.Empty.Tests/Sentinel.Empty.Tests.sln /p:CollectCoverage=true /p:MergeWith="/TestResults/coverage.json" /p:CoverletOutputFormat="cobertura" /p:CoverletOutput=/TestResults/