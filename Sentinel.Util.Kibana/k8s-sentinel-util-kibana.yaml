apiVersion: v1
kind: ConfigMap
metadata:
  name: sentinel-elk-kibana-configmap
  # Sentinel.Util.Mailhog
data:
  kibana.yml: |
    server.name: sentinel-elk-kibana
    server.host: "0"
    elasticsearch.url: http://sentinel-db-elasticsearch:9200
    xpack.monitoring.ui.container.elasticsearch.enabled: true
    # elasticsearch.username: kibana
    # elasticsearch.password: Password1$
---
apiVersion: v1
kind: Service
metadata:
  name: sentinel-elk-kibana
  labels:
    component: sentinel-elk-kibana
spec:
  type: ClusterIP
  selector:
    component: sentinel-elk-kibana
  ports:
  - name: http
    port: 80
    targetPort: http
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: sentinel-elk-kibana
  labels:
    component: sentinel-elk-kibana
spec:
  replicas: 1
  selector:
    matchLabels:
     component: sentinel-elk-kibana
  template:
    metadata:
      labels:
        component: sentinel-elk-kibana
    spec:
      containers:
      - name: sentinel-elk-kibana
        image: docker.elastic.co/kibana/kibana:6.4.1
        resources:
          limits:
            cpu: 1000m
          requests:
            cpu: 100m
        ports:
        - containerPort: 5601
          name: http
        volumeMounts:
        - name: sentinel-elk-kibana-configmap
          mountPath: /usr/share/kibana/config/kibana.yml
          subPath: kibana.yml
        resources: {}
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: File
        imagePullPolicy: Always
        securityContext:
          privileged: false
      volumes:
      - name: sentinel-elk-kibana-configmap
        configMap:
            name: sentinel-elk-kibana-configmap
      restartPolicy: Always
      terminationGracePeriodSeconds: 5
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
